{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class LeaderboardService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPlayers() {\n    return this.http.get('/api/listings');\n  }\n  getPlayerInfo(id) {\n    return this.http.get(`/api/listings/${id}`);\n  }\n  getTopPerGame(id) {\n    return this.http.get(`/api/q3`);\n  }\n  createPlayer(firstName, lastName, gamertag, platform, age, regionID) {\n    return this.http.post('/api/listings', {\n      firstName,\n      lastName,\n      gamertag,\n      platform,\n      age,\n      regionID\n    }, httpOptions);\n  }\n  editPlayer(id, firstName, lastName, gamertag, platform, age, regionID) {\n    return this.http.post(`/api/listings/${id}`, {\n      firstName,\n      lastName,\n      gamertag,\n      platform,\n      age,\n      regionID\n    });\n  }\n  deletePlayer(id) {\n    return this.http.delete(`/api/listings/${id}`);\n  }\n}\nLeaderboardService.ɵfac = function LeaderboardService_Factory(t) {\n  return new (t || LeaderboardService)(i0.ɵɵinject(i1.HttpClient));\n};\nLeaderboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LeaderboardService,\n  factory: LeaderboardService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAKD,OAAM,MAAOG,kBAAkB;EAE7BC,YACUC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EACV;EAEJC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,eAAe,CAAC;EACjD;EAEAC,aAAa,CAACC,EAAiB;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAS,iBAAiBE,EAAE,EAAE,CAAC;EACrD;EAEAC,aAAa,CAACD,EAAiB;IAC7B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAS,SAAS,CAAC;EACzC;EAEAI,YAAY,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,GAAW,EAAEC,QAAgB;IACjH,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CACnB,eAAe,EACf;MAAEN,SAAS;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,GAAG;MAAEC;IAAQ,CAAE,EAC1DhB,WAAW,CACZ;EACH;EAEAkB,UAAU,CAACV,EAAU,EAAEG,SAAiB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,QAAgB,EAAEC,GAAW,EAAEC,QAAgB;IAC3H,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CACnB,iBAAiBT,EAAE,EAAE,EACrB;MAAEG,SAAS;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC,GAAG;MAAEC;IAAQ,CAAE,CAC3D;EACH;EAEAG,YAAY,CAACX,EAAU;IACrB,OAAO,IAAI,CAACJ,IAAI,CAACgB,MAAM,CAAC,iBAAiBZ,EAAE,EAAE,CAAC;EAChD;;AAnCWN,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAmB,SAAlBnB,kBAAkB;EAAAoB,YAFjB;AAAM","names":["HttpHeaders","httpOptions","headers","LeaderboardService","constructor","http","getPlayers","get","getPlayerInfo","id","getTopPerGame","createPlayer","firstName","lastName","gamertag","platform","age","regionID","post","editPlayer","deletePlayer","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/robertpeterson/Desktop/DBFinal/queries/src/app/leaderboard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Player } from './types';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaderboardService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getPlayers(): Observable<Player[]> {\n    return this.http.get<Player[]>('/api/listings');\n  }\n\n  getPlayerInfo(id: string | null): Observable<Player> {\n    return this.http.get<Player>(`/api/listings/${id}`);\n  }\n\n  getTopPerGame(id: string | null): Observable<TopPerGame> {\n    return this.http.get<Player>(`/api/q3`);\n  }\n\n  createPlayer(firstName: string, lastName: string, gamertag: string, platform: string, age: number, regionID: number): Observable<Player> {\n    return this.http.post<Player>(\n      '/api/listings',\n      { firstName, lastName, gamertag, platform, age, regionID },\n      httpOptions,\n    );\n  }\n\n  editPlayer(id: number, firstName: string, lastName: string, gamertag: string, platform: string, age: number, regionID: number): Observable<Player> {\n    return this.http.post<Player>(\n      `/api/listings/${id}`,\n      { firstName, lastName, gamertag, platform, age, regionID },\n    );\n  }\n\n  deletePlayer(id: number): Observable<any> {\n    return this.http.delete(`/api/listings/${id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}