{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nexport class LeaderboardDataPageComponent {\n  constructor(router) {\n    this.router = router;\n    this.currentGameID = 0;\n    this.currentTimePlayed = 0;\n    this.currentKDR = 0;\n    this.currentWLR = 0;\n    this.currentRank = '';\n    this.gameID = 0;\n    this.timePlayed = 0;\n    this.killDeathRatio = 0;\n    this.winLossRatio = 0;\n    this.playerRank = '';\n    this.onSubmit = new EventEmitter();\n  }\n  ngOnInit() {\n    this.gameID = this.currentGameID;\n    this.timePlayed = this.currentTimePlayed;\n    this.killDeathRatio = this.currentKDR;\n    this.winLossRatio = this.currentWLR;\n    this.playerRank = this.currentRank;\n  }\n  onButtonClicked() {\n    this.onSubmit.emit({\n      playerID: 0,\n      gameID: this.gameID,\n      timePlayed: this.timePlayed,\n      killDeathRatio: this.killDeathRatio,\n      winLossRatio: this.winLossRatio,\n      playerRank: this.playerRank\n    });\n  }\n}\nLeaderboardDataPageComponent.ɵfac = function LeaderboardDataPageComponent_Factory(t) {\n  return new (t || LeaderboardDataPageComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nLeaderboardDataPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LeaderboardDataPageComponent,\n  selectors: [[\"app-leaderboard-data-page\"]],\n  inputs: {\n    buttonText: \"buttonText\",\n    currentGameID: \"currentGameID\",\n    currentTimePlayed: \"currentTimePlayed\",\n    currentKDR: \"currentKDR\",\n    currentWLR: \"currentWLR\",\n    currentRank: \"currentRank\"\n  },\n  outputs: {\n    onSubmit: \"onSubmit\"\n  },\n  decls: 29,\n  vars: 6,\n  consts: [[3, \"ngSubmit\"], [\"ng-controller\", \"gameChange\"], [\"for\", \"gameID\"], [\"id\", \"gameID\", \"name\", \"gameID\", \"ng-change\", \"myFunc()\", \"ng-model\", \"myValue\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"value\", \"1\"], [\"type\", \"number\", \"value\", \"2\"], [\"type\", \"number\", \"value\", \"3\"], [\"for\", \"timePlayed\"], [\"id\", \"timePlayed\", \"name\", \"timePlayed\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"winLossRatio\"], [\"id\", \"winLossRatio\", \"name\", \"winLossRatio\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"killDeathRatio\"], [\"id\", \"killDeathRatio\", \"name\", \"killDeathRatio\", \"type\", \"number\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"playerRank\"], [\"id\", \"playerRank\", \"name\", \"playerRank\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function LeaderboardDataPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LeaderboardDataPageComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onButtonClicked();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \" Game: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LeaderboardDataPageComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.gameID = $event;\n      });\n      i0.ɵɵelementStart(5, \"option\", 4);\n      i0.ɵɵtext(6, \"Overwatch 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 5);\n      i0.ɵɵtext(8, \"Valorant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 6);\n      i0.ɵɵtext(10, \"League of Legends\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\")(12, \"label\", 7);\n      i0.ɵɵtext(13, \" Time Played: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LeaderboardDataPageComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.timePlayed = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\")(16, \"label\", 9);\n      i0.ɵɵtext(17, \" Win Loss Ratio: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function LeaderboardDataPageComponent_Template_input_ngModelChange_18_listener($event) {\n        return ctx.winLossRatio = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\")(20, \"label\", 11);\n      i0.ɵɵtext(21, \" Kill Death Ratio: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function LeaderboardDataPageComponent_Template_input_ngModelChange_22_listener($event) {\n        return ctx.killDeathRatio = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\")(24, \"label\", 13);\n      i0.ɵɵtext(25, \" Rank: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function LeaderboardDataPageComponent_Template_input_ngModelChange_26_listener($event) {\n        return ctx.playerRank = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"button\", 15);\n      i0.ɵɵtext(28);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.gameID);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.timePlayed);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.winLossRatio);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.killDeathRatio);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.playerRank);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.buttonText);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2CA,YAAY,QAAQ,eAAe;;;;AAS9E,OAAM,MAAOC,4BAA4B;EAgBvCC,YACUC,MAAc;IAAd,WAAM,GAANA,MAAM;IAfP,kBAAa,GAAG,CAAC;IACjB,sBAAiB,GAAG,CAAC;IACrB,eAAU,GAAG,CAAC;IACd,eAAU,GAAG,CAAC;IACd,gBAAW,GAAG,EAAE;IAEzB,WAAM,GAAW,CAAC;IAClB,eAAU,GAAW,CAAC;IACtB,mBAAc,GAAW,CAAC;IAC1B,iBAAY,GAAW,CAAC;IACxB,eAAU,GAAW,EAAE;IAEb,aAAQ,GAAG,IAAIH,YAAY,EAAmB;EAIpD;EAEJI,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,aAAa;IAChC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,iBAAiB;IACxC,IAAI,CAACC,cAAc,GAAG,IAAI,CAACC,UAAU;IACrC,IAAI,CAACC,YAAY,GAAG,IAAI,CAACC,UAAU;IACnC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,WAAW;EACpC;EAEAC,eAAe;IACb,IAAI,CAACC,QAAQ,CAACC,IAAI,CAAC;MACjBC,QAAQ,EAAE,CAAC;MACXb,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBE,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BE,cAAc,EAAE,IAAI,CAACA,cAAc;MACnCE,YAAY,EAAE,IAAI,CAACA,YAAY;MAC/BE,UAAU,EAAE,IAAI,CAACA;KAClB,CAAC;EACJ;;AArCWZ,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAAkB;EAAAC;IAAAC;IAAAf;IAAAE;IAAAE;IAAAE;IAAAE;EAAA;EAAAQ;IAAAN;EAAA;EAAAO;EAAAC;EAAAC;EAAAC;IAAA;MCTzCC,+BAAqC;MAA/BA;QAAA,OAAYC,qBAAiB;MAAA,EAAC;MAChCD,8BAAgC;MAExBA,uBACJ;MAAAA,iBAAQ;MACRA,iCAA+F;MAArBA;QAAA;MAAA,EAAoB;MAC1FA,iCAAgC;MAAAA,2BAAW;MAAAA,iBAAS;MACpDA,iCAAgC;MAAAA,wBAAQ;MAAAA,iBAAS;MACjDA,iCAAgC;MAAAA,kCAAiB;MAAAA,iBAAS;MAGlEA,4BAAK;MAEGA,+BACJ;MAAAA,iBAAQ;MACRA,iCAAkF;MAA3BA;QAAA;MAAA,EAAwB;MAA/EA,iBAAkF;MAEtFA,4BAAK;MAEGA,kCACJ;MAAAA,iBAAQ;MACRA,kCAAwF;MAA7BA;QAAA;MAAA,EAA0B;MAArFA,iBAAwF;MAE5FA,4BAAK;MAEGA,oCACJ;MAAAA,iBAAQ;MACRA,kCAA8F;MAA/BA;QAAA;MAAA,EAA4B;MAA3FA,iBAA8F;MAElGA,4BAAK;MAEGA,wBACJ;MAAAA,iBAAQ;MACRA,kCAAgF;MAA3BA;QAAA;MAAA,EAAwB;MAA7EA,iBAAgF;MAEpFA,mCAAsB;MAAAA,aAAc;MAAAA,iBAAS;;;MA9BiCA,eAAoB;MAApBA,oCAAoB;MAUvCA,gBAAwB;MAAxBA,wCAAwB;MAMpBA,eAA0B;MAA1BA,0CAA0B;MAMtBA,eAA4B;MAA5BA,4CAA4B;MAMtCA,eAAwB;MAAxBA,wCAAwB;MAE3DA,eAAc;MAAdA,oCAAc","names":["EventEmitter","LeaderboardDataPageComponent","constructor","router","ngOnInit","gameID","currentGameID","timePlayed","currentTimePlayed","killDeathRatio","currentKDR","winLossRatio","currentWLR","playerRank","currentRank","onButtonClicked","onSubmit","emit","playerID","selectors","inputs","buttonText","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/robertpeterson/Desktop/DBFinal/queries/src/app/leaderboard-data-page/leaderboard-data-page.component.ts","/Users/robertpeterson/Desktop/DBFinal/queries/src/app/leaderboard-data-page/leaderboard-data-page.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LeaderboardInfo } from '../types';\n\n@Component({\n  selector: 'app-leaderboard-data-page',\n  templateUrl: './leaderboard-data-page.component.html',\n  styleUrls: ['./leaderboard-data-page.component.css']\n})\nexport class LeaderboardDataPageComponent implements OnInit{\n  @Input() buttonText: any;\n  @Input() currentGameID = 0;\n  @Input() currentTimePlayed = 0;\n  @Input() currentKDR = 0;\n  @Input() currentWLR = 0;\n  @Input() currentRank = '';\n\n  gameID: number = 0;\n  timePlayed: number = 0;\n  killDeathRatio: number = 0;\n  winLossRatio: number = 0;\n  playerRank: string = '';\n\n  @Output() onSubmit = new EventEmitter<LeaderboardInfo>();\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.gameID = this.currentGameID;\n    this.timePlayed = this.currentTimePlayed;\n    this.killDeathRatio = this.currentKDR;\n    this.winLossRatio = this.currentWLR;\n    this.playerRank = this.currentRank;\n  }\n\n  onButtonClicked(): void {\n    this.onSubmit.emit({\n      playerID: 0,\n      gameID: this.gameID,\n      timePlayed: this.timePlayed,\n      killDeathRatio: this.killDeathRatio,\n      winLossRatio: this.winLossRatio,\n      playerRank: this.playerRank,\n    });\n  }\n}\n","<form (ngSubmit)=\"onButtonClicked()\">\n    <div ng-controller=\"gameChange\">\n        <label for=\"gameID\">\n            Game:\n        </label>\n        <select id=\"gameID\" name=\"gameID\" ng-change=\"myFunc()\" ng-model=\"myValue\" [(ngModel)]=\"gameID\">\n            <option type=\"number\" value=\"1\">Overwatch 2</option>\n            <option type=\"number\" value=\"2\">Valorant</option>\n            <option type=\"number\" value=\"3\">League of Legends</option>\n        </select>\n    </div>\n    <div>\n        <label for=\"timePlayed\">\n            Time Played:\n        </label>\n        <input id=\"timePlayed\" name=\"timePlayed\" type=\"number\" [(ngModel)]=\"timePlayed\" />\n    </div>\n    <div>\n        <label for=\"winLossRatio\">\n            Win Loss Ratio:\n        </label>\n        <input id=\"winLossRatio\" name=\"winLossRatio\" type=\"number\" [(ngModel)]=\"winLossRatio\" />\n    </div>\n    <div>\n        <label for=\"killDeathRatio\">\n            Kill Death Ratio:\n        </label>\n        <input id=\"killDeathRatio\" name=\"killDeathRatio\" type=\"number\" [(ngModel)]=\"killDeathRatio\" />\n    </div>\n    <div>\n        <label for=\"playerRank\">\n            Rank:\n        </label>\n        <input id=\"playerRank\" name=\"playerRank\" type=\"text\" [(ngModel)]=\"playerRank\" />\n    </div>\n    <button type=\"submit\">{{buttonText}}</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}