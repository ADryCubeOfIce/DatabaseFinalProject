{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../leaderboard.service\";\nimport * as i2 from \"@angular/router\";\nfunction Q3Component_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 8)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const top_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/q1/\", top_r1.playerID, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate5(\"\", top_r1.gamertag, \" | W/L: \", top_r1.winLossRatio, \" | K/D: \", top_r1.killDeathRatio, \" | Hours Played: \", top_r1.timePlayed, \" | Rank: \", top_r1.playerRank, \"\");\n  }\n}\nexport class Q3Component {\n  constructor(leaderboardService, router) {\n    this.leaderboardService = leaderboardService;\n    this.router = router;\n    this.TopPerGames = [];\n  }\n  ngOnInit() {\n    this.leaderboardService.getTopPerGame(1).subscribe(TopPerGames => this.TopPerGames = TopPerGames);\n  }\n  makeQuery(gameID) {\n    this.leaderboardService.getTopPerGame(gameID).subscribe(() => {\n      this.router.navigateByUrl(`/q3`);\n    });\n  }\n}\nQ3Component.ɵfac = function Q3Component_Factory(t) {\n  return new (t || Q3Component)(i0.ɵɵdirectiveInject(i1.LeaderboardService), i0.ɵɵdirectiveInject(i2.Router));\n};\nQ3Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: Q3Component,\n  selectors: [[\"app-q3\"]],\n  decls: 20,\n  vars: 1,\n  consts: [[1, \"content-box\"], [\"id\", \"gameID\", \"name\", \"gameID\"], [\"type\", \"number\", \"value\", \"1\"], [\"type\", \"number\", \"value\", \"2\"], [\"type\", \"number\", \"value\", \"3\"], [\"routerLink\", \"/q3/gameID\"], [\"class\", \"content-box\", 4, \"ngFor\", \"ngForOf\"], [\"routerLink\", \"/query\"], [3, \"routerLink\"]],\n  template: function Q3Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"div\")(2, \"h3\");\n      i0.ɵɵtext(3, \"Top Players of the given game\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 0)(5, \"select\", 1)(6, \"option\", 2);\n      i0.ɵɵtext(7, \"Overwatch\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"option\", 3);\n      i0.ɵɵtext(9, \"Valorant\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"option\", 4);\n      i0.ɵɵtext(11, \"League of Legends\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"a\", 5)(13, \"button\");\n      i0.ɵɵtext(14, \"Display query\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(15, Q3Component_div_15_Template, 4, 6, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 0)(17, \"a\", 7)(18, \"button\");\n      i0.ɵɵtext(19, \"Back\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.TopPerGames);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;IAcIA,8BAAyD;IAE7CA,YAAwI;IAAAA,iBAAK;;;;IADlJA,eAAiC;IAAjCA,oEAAiC;IAC5BA,eAAwI;IAAxIA,0LAAwI;;;ACNxJ,OAAM,MAAOC,WAAW;EAGtBC,YACUC,kBAAsC,EACtCC,MAAc;IADd,uBAAkB,GAAlBD,kBAAkB;IAClB,WAAM,GAANC,MAAM;IAJhB,gBAAW,GAAiB,EAAE;EAK1B;EAEJC,QAAQ;IACN,IAAI,CAACF,kBAAkB,CAACG,aAAa,CAAC,CAAC,CAAC,CACrCC,SAAS,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,GAAGA,WAAW,CAAC;EAC7D;EAEAC,SAAS,CAACC,MAAc;IACtB,IAAI,CAACP,kBAAkB,CAACG,aAAa,CAACI,MAAM,CAAC,CAC1CH,SAAS,CAAC,MAAK;MACd,IAAI,CAACH,MAAM,CAACO,aAAa,CAAC,KAAK,CAAC;IAClC,CAAC,CAAC;EACN;;AAlBWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;QAAXA,WAAW;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVxBhB,2BAAK;MAEOA,6CAA6B;MAAAA,iBAAK;MAE1CA,8BAAyB;MAEeA,yBAAS;MAAAA,iBAAS;MAClDA,iCAAgC;MAAAA,wBAAQ;MAAAA,iBAAS;MACjDA,kCAAgC;MAAAA,kCAAiB;MAAAA,iBAAS;MAE9DA,6BAA2B;MACfA,8BAAa;MAAAA,iBAAS;MAGtCA,8DAIM;MACVA,iBAAM;MACNA,+BAAyB;MAETA,qBAAI;MAAAA,iBAAS;;;MARgBA,gBAAc;MAAdA,yCAAc","names":["i0","Q3Component","constructor","leaderboardService","router","ngOnInit","getTopPerGame","subscribe","TopPerGames","makeQuery","gameID","navigateByUrl","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/robertpeterson/Desktop/DBFinal/queries/src/app/q3/q3.component.html","/Users/robertpeterson/Desktop/DBFinal/queries/src/app/q3/q3.component.ts"],"sourcesContent":["<div>\n    <div>\n        <h3>Top Players of the given game</h3>\n    </div>\n    <div class=\"content-box\">\n        <select id=\"gameID\" name=\"gameID\">\n            <option type=\"number\" value=\"1\">Overwatch</option>\n            <option type=\"number\" value=\"2\">Valorant</option>\n            <option type=\"number\" value=\"3\">League of Legends</option>\n        </select>\n        <a routerLink=\"/q3/gameID\">\n            <button>Display query</button>\n        </a>\n    </div>\n    <div class=\"content-box\" *ngFor=\"let top of TopPerGames\">\n        <a routerLink=\"/q1/{{top.playerID}}\">\n            <h3>{{top.gamertag}} | W/L: {{top.winLossRatio}} | K/D: {{top.killDeathRatio}} | Hours Played: {{top.timePlayed}} | Rank: {{top.playerRank}}</h3>\n        </a>\n    </div>\n</div>\n<div class=\"content-box\">\n    <a routerLink=\"/query\">\n        <button>Back</button>\n    </a>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TopPerGame } from '../types';\nimport { LeaderboardService } from '../leaderboard.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-q3',\n  templateUrl: './q3.component.html',\n  styleUrls: ['./q3.component.css']\n})\nexport class Q3Component implements OnInit {\n  TopPerGames: TopPerGame[] = [];\n\n  constructor(\n    private leaderboardService: LeaderboardService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.leaderboardService.getTopPerGame(1)\n      .subscribe(TopPerGames => this.TopPerGames = TopPerGames);\n  }\n\n  makeQuery(gameID: number): void {\n    this.leaderboardService.getTopPerGame(gameID)\n      .subscribe(() => {\n        this.router.navigateByUrl(`/q3`);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}