{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../leaderboard.service\";\nimport * as i3 from \"../leaderboard-data-page/leaderboard-data-page.component\";\nexport class EditLeaderboardPageComponent {\n  constructor(router, route, leaderboardService) {\n    this.router = router;\n    this.route = route;\n    this.leaderboardService = leaderboardService;\n  }\n  ngOnInit() {\n    const pID = this.route.snapshot.paramMap.get('pID');\n    const gID = this.route.snapshot.paramMap.get('gID');\n    this.leaderboardService.getLeaderboardInfo(pID, gID).subscribe(leaderboard => this.leaderboard = leaderboard);\n  }\n  onSubmit({\n    timePlayed,\n    killDeathRatio,\n    winLossRatio,\n    playerRank\n  }) {\n    const pID = this.route.snapshot.paramMap.get('pID');\n    const gID = this.route.snapshot.paramMap.get('gID');\n    this.leaderboardService.editLeaderboard(Number(pID), Number(gID), timePlayed, killDeathRatio, winLossRatio, playerRank).subscribe(() => {\n      this.router.navigateByUrl('/q5');\n    });\n  }\n}\nEditLeaderboardPageComponent.ɵfac = function EditLeaderboardPageComponent_Factory(t) {\n  return new (t || EditLeaderboardPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.LeaderboardService));\n};\nEditLeaderboardPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EditLeaderboardPageComponent,\n  selectors: [[\"app-edit-leaderboard-page\"]],\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"content-box\"], [\"buttonText\", \"Save Changes\", 3, \"currentGameID\", \"currentTimePlayed\", \"currentKDR\", \"currentWLR\", \"currentRank\", \"onSubmit\"]],\n  template: function EditLeaderboardPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Edit Leaderboard Info\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"app-leaderboard-data-page\", 1);\n      i0.ɵɵlistener(\"onSubmit\", function EditLeaderboardPageComponent_Template_app_leaderboard_data_page_onSubmit_3_listener($event) {\n        return ctx.onSubmit($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"currentGameID\", ctx.leaderboard.gameID)(\"currentTimePlayed\", ctx.leaderboard.timePlayed)(\"currentKDR\", ctx.leaderboard.killDeathRatio)(\"currentWLR\", ctx.leaderboard.winLossRatio)(\"currentRank\", ctx.leaderboard.playerRank);\n    }\n  },\n  dependencies: [i3.LeaderboardDataPageComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,4BAA4B;EAGvCC,YACUC,MAAc,EACdC,KAAqB,EACrBC,kBAAsC;IAFtC,WAAM,GAANF,MAAM;IACN,UAAK,GAALC,KAAK;IACL,uBAAkB,GAAlBC,kBAAkB;EACzB;EAEHC,QAAQ;IACN,MAAMC,GAAG,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACnD,MAAMC,GAAG,GAAG,IAAI,CAACP,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACnD,IAAI,CAACL,kBAAkB,CAACO,kBAAkB,CAACL,GAAG,EAAEI,GAAG,CAAC,CACjDE,SAAS,CAACC,WAAW,IAAI,IAAI,CAACA,WAAW,GAAGA,WAAW,CAAC;EAC7D;EAEAC,QAAQ,CAAC;IAAEC,UAAU;IAAEC,cAAc;IAAEC,YAAY;IAAEC;EAAU,CAAmB;IAChF,MAAMZ,GAAG,GAAG,IAAI,CAACH,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACnD,MAAMC,GAAG,GAAG,IAAI,CAACP,KAAK,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,KAAK,CAAC;IACnD,IAAI,CAACL,kBAAkB,CAACe,eAAe,CAACC,MAAM,CAACd,GAAG,CAAC,EAAEc,MAAM,CAACV,GAAG,CAAC,EAAEK,UAAU,EAAEC,cAAc,EAAEC,YAAY,EAAEC,UAAU,CAAC,CACpHN,SAAS,CAAC,MAAK;MACd,IAAI,CAACV,MAAM,CAACmB,aAAa,CAAC,KAAK,CAAC;IAClC,CAAC,CAAC;EACN;;AAvBWrB,4BAA4B;mBAA5BA,4BAA4B;AAAA;AAA5BA,4BAA4B;QAA5BA,4BAA4B;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVzCC,8BAAyB;MACjBA,qCAAqB;MAAAA,iBAAK;MAC9BA,oDAOkC;MAA9BA;QAAA,OAAYC,oBAAgB;MAAA,EAAC;MAACD,iBAA4B;;;MAL1DA,eAAoC;MAApCA,sDAAoC","names":["EditLeaderboardPageComponent","constructor","router","route","leaderboardService","ngOnInit","pID","snapshot","paramMap","get","gID","getLeaderboardInfo","subscribe","leaderboard","onSubmit","timePlayed","killDeathRatio","winLossRatio","playerRank","editLeaderboard","Number","navigateByUrl","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/robertpeterson/Desktop/DBFinal/queries/src/app/edit-leaderboard-page/edit-leaderboard-page.component.ts","/Users/robertpeterson/Desktop/DBFinal/queries/src/app/edit-leaderboard-page/edit-leaderboard-page.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LeaderboardInfo } from '../types';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LeaderboardService } from '../leaderboard.service';\n\n@Component({\n  selector: 'app-edit-leaderboard-page',\n  templateUrl: './edit-leaderboard-page.component.html',\n  styleUrls: ['./edit-leaderboard-page.component.css']\n})\nexport class EditLeaderboardPageComponent implements OnInit{\n  leaderboard!: LeaderboardInfo;\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private leaderboardService: LeaderboardService,\n  ) {}\n\n  ngOnInit(): void {\n    const pID = this.route.snapshot.paramMap.get('pID');\n    const gID = this.route.snapshot.paramMap.get('gID');\n    this.leaderboardService.getLeaderboardInfo(pID, gID)\n      .subscribe(leaderboard => this.leaderboard = leaderboard);\n  }\n\n  onSubmit({ timePlayed, killDeathRatio, winLossRatio, playerRank }: LeaderboardInfo): void {\n    const pID = this.route.snapshot.paramMap.get('pID');\n    const gID = this.route.snapshot.paramMap.get('gID');\n    this.leaderboardService.editLeaderboard(Number(pID), Number(gID), timePlayed, killDeathRatio, winLossRatio, playerRank)\n      .subscribe(() => {\n        this.router.navigateByUrl('/q5');\n      }); \n  }\n}\n","<div class=\"content-box\">\n    <h2>Edit Leaderboard Info</h2>\n    <app-leaderboard-data-page \n        buttonText=\"Save Changes\"\n        [currentGameID]=\"leaderboard.gameID\"\n        [currentTimePlayed]=\"leaderboard.timePlayed\"\n        [currentKDR]=\"leaderboard.killDeathRatio\"\n        [currentWLR]=\"leaderboard.winLossRatio\"\n        [currentRank]=\"leaderboard.playerRank\"\n        (onSubmit)=\"onSubmit($event)\"></app-leaderboard-data-page>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}